@using LB.PhotoGalleries.Application.Models
@model LB.PhotoGalleries.Application.Models.Image
@{
    ViewData["Title"] = "Edit Image";
    var error = (string)ViewData["error"];
    var gallery = (Gallery)ViewData["gallery"];
}

<h1>Edit Image</h1>
<div>
    <a asp-controller="Galleries" asp-action="Edit" asp-route-pk="@gallery.CategoryId" asp-route-id="@gallery.Id">Back to Gallery</a>
</div>
<hr />

@if (!string.IsNullOrEmpty(error))
{
    <div class="alert alert-danger" role="alert">
        @error
    </div>
}

<div class="row">
    <div class="col">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Caption" class="control-label"></label>
                <textarea class="form-control" rows="3" asp-for="Caption"></textarea>
                <span asp-validation-for="Caption" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Credit" class="control-label"></label>
                <input asp-for="Credit" class="form-control" />
                <span asp-validation-for="Credit" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CaptureDate" class="control-label"></label>
                <input asp-for="CaptureDate" class="form-control" />
                <span asp-validation-for="CaptureDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
    <div class="col">

        <img srcset="
             /i/@Model.StorageId?h=1600 1600h
             /i/@Model.StorageId?h=1200 1200h
             /i/@Model.StorageId?h=800 800h
             /i/@Model.StorageId?h=400 400h"
             src="/i/@Model.StorageId?h=400"
             style="display: inline; padding-right: 10px; padding-bottom: 10px;"
             alt="@Model.Name"
             height="400" />
        
        <dl class="row">
            <dt class="col-sm-10">
                @Html.DisplayNameFor(model => model.Created)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Created)
            </dd>

            <dt class="col-sm-10">
                Number of comments
            </dt>
            <dd class="col-sm-10">
                @Model.Comments.Count
            </dd>

            @if (Model.LegacyNumId > 0)
            {
                <dt class="col-sm-10">
                    @Html.DisplayNameFor(model => model.LegacyNumId)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.LegacyNumId)
                </dd>
            }

            @if (Model.LegacyGuidId.HasValue && Model.LegacyGuidId != Guid.Empty)
            {
                <dt class="col-sm-10">
                    @Html.DisplayNameFor(model => model.LegacyGuidId)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.LegacyGuidId)
                </dd>
            }

        </dl>

    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
