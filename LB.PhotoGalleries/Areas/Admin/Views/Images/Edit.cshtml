@using LB.PhotoGalleries.Application.Models
@model LB.PhotoGalleries.Application.Models.Image
@{
    ViewData["Title"] = "Edit Image";
    var error = (string)ViewData["error"];
    var gallery = (Gallery)ViewData["gallery"];
    var tags = (string) ViewData["tags"];
}

@section Styles {
    <link rel="stylesheet" href="~/lib/bootstrap-tagsinput-master/dist/bootstrap-tagsinput.css" />
}

<h1>Edit Image</h1>
<div>
    <a asp-controller="Galleries" asp-action="Edit" asp-route-pk="@gallery.CategoryId" asp-route-id="@gallery.Id">Back to Gallery</a>
</div>
<hr />

@if (!string.IsNullOrEmpty(error))
{
    <div class="alert alert-danger" role="alert">
        @error
    </div>
}

<div class="row">
    <div class="col">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Caption" class="control-label"></label>
                <textarea class="form-control" rows="3" asp-for="Caption"></textarea>
                <span asp-validation-for="Caption" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Credit" class="control-label"></label>
                <input asp-for="Credit" class="form-control" />
                <small class="form-text text-muted">Please only supply if you are not the photographer.</small>
                <span asp-validation-for="Credit" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CaptureDate" class="control-label"></label>
                <input asp-for="CaptureDate" class="form-control" />
                <span asp-validation-for="CaptureDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="tagsCsv" class="control-label">Tags</label>
                <input type="text" name="tagsCsv" id="tagsCsv" data-role="tagsinput" value="@tags" />
                <small class="form-text text-muted">Please enter comma separated values.</small>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
    <div class="col">

        <img id="preview-image" alt="@Model.Name" width="550" style="margin-bottom: 20px;" />

        <dl class="row">
            <dt class="col-sm-10">
                @Html.DisplayNameFor(model => model.Created)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Created)
            </dd>

            <dt class="col-sm-10">
                Number of comments
            </dt>
            <dd class="col-sm-10">
                @Model.Comments.Count
            </dd>

            @if (Model.LegacyNumId > 0)
            {
                <dt class="col-sm-10">
                    @Html.DisplayNameFor(model => model.LegacyNumId)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.LegacyNumId)
                </dd>
            }

            @if (Model.LegacyGuidId.HasValue && Model.LegacyGuidId != Guid.Empty)
            {
                <dt class="col-sm-10">
                    @Html.DisplayNameFor(model => model.LegacyGuidId)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.LegacyGuidId)
                </dd>
            }

        </dl>

    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script src="~/lib/bootstrap-tagsinput-master/dist/bootstrap-tagsinput.js"></script>
    
    <script type="text/javascript">
        $(document).ready(function () {
            // display the right size image for the pixel density of the display, i.e. retina images need to be requested bigger than the intended display size.
            var scaledWidth = 550 * window.devicePixelRatio;
            $("#preview-image").attr('src', '/i/@Model.StorageId?w=' + scaledWidth);
        });
    </script>
}
